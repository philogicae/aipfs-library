name: aipfs-agent

services:
  aipfs-agent-backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    image: aipfs-agent-backend
    container_name: aipfs-agent-backend
    ports:
      - "17890:1789"
    volumes:
      - app_data:/app/data
      - shared_data:/shared
    env_file:
      - ../.env
    restart: unless-stopped
    dns:
      - 9.9.9.9
      - 149.112.112.112
      - 2620:fe::fe
      - 2620:fe::9
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - aipfs-agent

  ipfs-node:
    image: ipfs/kubo:latest
    container_name: ipfs-node
    entrypoint: [ "/bin/sh", "-c", "/sbin/tini -- /usr/local/bin/start_ipfs version; ipfs config --json Routing.AcceleratedDHTClient true; ipfs config --json Swarm.EnableAutoRelay true; cat /data/ipfs/config; chmod 777 /data/ipfs/config; /sbin/tini -- /usr/local/bin/start_ipfs daemon --migrate --enable-gc" ]
    # To use Filestore: Experimental.FilestoreEnabled
    ports:
      - "4001:4001"  # IPFS swarm
      - "4001:4001/udp" # IPFS swarm UDP
      - "5001:5001"  # IPFS API
      - "8088:8080"  # IPFS Gateway
    volumes:
      - ipfs_data:/data/ipfs
      - ipfs_staging:/export
      - shared_data:/shared
    environment:
      - IPFS_PROFILE=server  # Optimize for server deployment
      - IPFS_PATH=/data/ipfs
      - IPFS_LOGGING=INFO
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - aipfs-agent

networks:
  aipfs-agent:
    name: aipfs-agent
    driver: bridge

volumes:
  app_data:
  shared_data:
  ipfs_data:
  ipfs_staging: